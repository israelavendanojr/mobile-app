# Generated by Django 4.2.7 on 2025-07-10 17:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DayPatternThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_index', models.IntegerField()),
            ],
            options={
                'ordering': ['pattern_index'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('target_sets', models.IntegerField()),
                ('target_reps', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ExercisePattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Muscle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SplitDayThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_index', models.IntegerField()),
            ],
            options={
                'ordering': ['day_index'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_name', models.CharField(max_length=100)),
                ('order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutDayTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('patterns', models.ManyToManyField(related_name='day_templates', through='training.DayPatternThrough', to='training.exercisepattern')),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutSplitTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('days_per_week', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('workouts', models.ManyToManyField(through='training.SplitDayThrough', to='training.workoutdaytemplate')),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('days_per_week', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('is_complete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkoutDayLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('is_complete', models.BooleanField(default=False)),
                ('workout_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='training.workoutday')),
                ('workout_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='training.workoutlog')),
            ],
        ),
        migrations.AddField(
            model_name='workoutday',
            name='plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='training.workoutplan'),
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_per_week', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('training_age', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('volume', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High')], max_length=50)),
                ('bodyweight_exercises', models.CharField(choices=[('bodyweight', 'Bodyweight'), ('weighted', 'Weighted'), ('absent', 'Absent')], max_length=50)),
                ('equipment', models.ManyToManyField(to='training.equipment')),
                ('priority_muscles', models.ManyToManyField(to='training.muscle')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='splitdaythrough',
            name='day_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='training.workoutdaytemplate'),
        ),
        migrations.AddField(
            model_name='splitdaythrough',
            name='split',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='training.workoutsplittemplate'),
        ),
        migrations.CreateModel(
            name='SetLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_number', models.IntegerField()),
                ('weight', models.FloatField()),
                ('reps', models.IntegerField()),
                ('rpe', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('source', models.CharField(choices=[('manual', 'Manual'), ('auto', 'Auto')], default='manual', max_length=10)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sets', to='training.exerciselog')),
            ],
        ),
        migrations.CreateModel(
            name='PlannedExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sets', models.IntegerField()),
                ('start_reps', models.IntegerField()),
                ('end_reps', models.IntegerField()),
                ('skip', models.BooleanField(default=False)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='training.workoutday')),
            ],
        ),
        migrations.AddField(
            model_name='exercisepattern',
            name='target_muscles',
            field=models.ManyToManyField(to='training.muscle'),
        ),
        migrations.CreateModel(
            name='ExerciseMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('compound', 'Compound'), ('isolation', 'Isolation')], default='compound', max_length=100)),
                ('equipment', models.ManyToManyField(to='training.equipment')),
                ('pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='training.exercisepattern')),
            ],
        ),
        migrations.AddField(
            model_name='exerciselog',
            name='workout_day_log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='training.workoutdaylog'),
        ),
        migrations.AddField(
            model_name='daypatternthrough',
            name='day_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='training.workoutdaytemplate'),
        ),
        migrations.AddField(
            model_name='daypatternthrough',
            name='pattern',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='training.exercisepattern'),
        ),
    ]
